/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package librarymanagementsoftware;

import java.sql.*;
import javax.swing.*;

/**
 *
 * @author Muhammad
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        usr = new javax.swing.JTextField();
        login = new javax.swing.JButton();
        pas = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome to Libri");
        setType(java.awt.Window.Type.POPUP);

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 0, 100)); // NOI18N
        jLabel1.setText("Libri");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setText("Password:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel3.setText("Admin:");

        usr.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N

        login.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        login.setText("Login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        pas.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(usr, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                            .addComponent(pas))))
                .addGap(8, 10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(pas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(login, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        if (usr.getText().equals("admin") && pas.getText().equals("pass")) {
            try {
                Class.forName("java.sql.DriverManager");
                Connection con = (Connection) DriverManager.getConnection(SQL.host, SQL.user, SQL.pass);
                MainFrame main = new MainFrame();
                main.setVisible(true);
                this.dispose();
                System.out.println("Database Found -> LIBRI");
            } catch (Exception exp) {
                if (exp.toString().equals("com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown database 'libri'")) {
                    System.out.println("Database NOT Found -> LIBRI");
                    try {
                        Class.forName("java.sql.DriverManager");
                        Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/", SQL.user, SQL.pass);
                        Statement s = (Statement) con.createStatement();
                        s.executeUpdate("CREATE DATABASE libri");
                        System.out.println("Database Created -> LIBRI");
                    } catch (Exception exp2) {
                        System.out.println(exp2.toString());
                    }
                    try {
                        Connection con1 = (Connection) DriverManager.getConnection(SQL.host, SQL.user, SQL.pass);
                        Statement s1 = (Statement) con1.createStatement();
                        
                        //Adding Tables
                        s1.executeUpdate("CREATE TABLE Books (id INT(5) NOT NULL, Name VARCHAR(60) NOT NULL, Status VARCHAR(9) NOT NULL,"
                                + " Author VARCHAR(20) NOT NULL, Code VARCHAR(5), PRIMARY KEY(id, code))");
                        s1.executeUpdate("CREATE TABLE IssuedBooks (id INT(5), Name VARCHAR(60), Author VARCHAR(20), DateOfIssue VARCHAR(10),"
                                + " DateOfReturn VARCHAR(10), IssuedTo VARCHAR(5), Code VARCHAR(5), PRIMARY KEY(id, code))");
                        s1.executeUpdate("CREATE TABLE Members (id INT(5), Name VARCHAR(60) NOT NULL, Mobile BIGINT(10) NOT NULL,"
                                +" Address VARCHAR(100) NOT NULL, PRIMARY KEY(id, mobile))");
                        
                        System.out.println("LIBRI -> Added Tables");
                        
                        //Adding Books
                        s1.executeUpdate("INSERT INTO books values(11111, 'The Maze Runner', 'Available', 'James Dashner', 'TMRJD')");
                        s1.executeUpdate("INSERT INTO books values(11112, 'The Scorch Trials', 'Available', 'James Dashner', 'TSTJD')");
                        s1.executeUpdate("INSERT INTO books values(11113, 'The Death Cure', 'Available', 'James Dashner', 'TDCJD')");
                        s1.executeUpdate("INSERT INTO books values(11114, 'The Hunger Games', 'Available', 'Suzanne Collins', 'THGSC')");
                        s1.executeUpdate("INSERT INTO books values(11115, 'Catching Fire', 'Available', 'Suzanne Collins', 'TCFSC')");
                        s1.executeUpdate("INSERT INTO books values(11116, 'Mockingjay', 'Available', 'Suzanne Collins', 'THMSC')");
                        s1.executeUpdate("INSERT INTO books values(11117, 'The Invisible Man', 'Available', 'H. G. Wells', 'TIMHG')");
                        s1.executeUpdate("INSERT INTO books values(11118, 'A Tale of Two Cities', 'Available', 'Charles Dikens', 'TTCCD')");
                        s1.executeUpdate("INSERT INTO books values(11119, 'The Lord of the Rings', 'Available', 'J. R. R. Tolkien', 'TLRJR')");
                        s1.executeUpdate("INSERT INTO books values(11120, 'Dream of the Red Chamber', 'Available', 'Tsao Hsuen-Chin', 'RCTHC')");
                        
                        System.out.println("Books -> Dummy Books Added");
                        
                        //Adding Member
                        s1.executeUpdate("INSERT INTO members values(12400, 'Muhammad Muzzammil', 9873404375, 'SomePlace, in, India.')");
                        System.out.println("Members -> Dummy Member Added");
                        
                        //Starting App
                        MainFrame main = new MainFrame();
                        main.setVisible(true);
                        this.dispose();
                    } catch (Exception exp3) {
                        System.out.println(exp3.toString());
                    }
                }else {
                    JOptionPane.showMessageDialog(this, exp.getMessage());
                }
            }
        } else {
            String error = "The username or password you entered is incorrect. Please try again";
            JOptionPane.showMessageDialog(this, error);
            pas.selectAll();
            pas.requestFocus();
            System.out.println(error);
        }
    }//GEN-LAST:event_loginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton login;
    private javax.swing.JPasswordField pas;
    private javax.swing.JTextField usr;
    // End of variables declaration//GEN-END:variables
}
